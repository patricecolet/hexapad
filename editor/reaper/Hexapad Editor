desc:HEXAPAD EDITOR


@init

// allocate array memory
function alloc(sz) ( (this.top+=sz)-sz; );
gfx_clear=(0);
mouse_click = 0;
//gfx_showmenu("str");
sysex_buf = 100000;
sysex_buf[0] = $xf0;
sysex_buf[1] = $x48;// H
sysex_buf[2] = $x45;// E
sysex_buf[3] = $x58;// X
sysex_buf[4] = $x41;// A
sysex_buf[5] = $x50;// P
sysex_buf[6] = $x41;// A
sysex_buf[7] = $x44;// D
sysex_buf[8] = $x00;// 0
sysex_buf[9] = $x01;// Set command
sysex_buf[10] = $x01;// version 1
sysex_buf[11] = $x00;// revision 0

sysex_header_size = 12;
sysex_size = sysex_header_size;

PAD_SETTINGS =  alloc(49);
i = 0;j = 0;
loop(7,
  (i == 1) ? j = 2;
  (i == 2) ? j = 4;
  (i == 3) ? j = 5;
  (i == 4) ? j = 7;
  (i == 5) ? j = 9;
  (i == 6) ? j = 11;
  PAD_SETTINGS[0 + (i * 7)] = 0;
  PAD_SETTINGS[1 + (i * 7)] = 60 + j;
  PAD_SETTINGS[2 + (i * 7)] = 1;
  PAD_SETTINGS[3 + (i * 7)] = 0;
  PAD_SETTINGS[4 + (i * 7)] = 0;
  PAD_SETTINGS[5 + (i * 7)] = 0;
  PAD_SETTINGS[6 + (i * 7)] = 0;
  i += 1;
);


pad.scale = 5;
pad.y.offset = 300;
pad.x.offset = 200;
current_pad = 7;
//one pad coordinates
PAD_X = alloc(4);
PAD_Y = alloc(4);
PAD_X[0] = 344/pad.scale;
PAD_Y[0] = 10/pad.scale;
PAD_X[1] = 881/pad.scale;
PAD_Y[1] = 10/pad.scale;
PAD_X[2] = 449/pad.scale;
PAD_Y[2] = 758/pad.scale;
PAD_X[3] = 180/pad.scale;
PAD_Y[3] = 293/pad.scale;

//central pad
HEXAGONE_X = alloc(6);
HEXAGONE_Y = alloc(6);
HEXAGONE_X[0] = -163/pad.scale;
HEXAGONE_Y[0] = -283/pad.scale;
HEXAGONE_X[1] = 163/pad.scale;
HEXAGONE_Y[1] = -283/pad.scale;
HEXAGONE_X[2] = 326/pad.scale;
HEXAGONE_Y[2] = 0/pad.scale;
HEXAGONE_X[3] = 163/pad.scale;
HEXAGONE_Y[3] = 283/pad.scale;
HEXAGONE_X[4] = -163/pad.scale;
HEXAGONE_Y[4] = 283/pad.scale;
HEXAGONE_X[5] = -326/pad.scale;
HEXAGONE_Y[5] = 0/pad.scale;

//peripheric pads
TRAPEZE_X = alloc(24);
TRAPEZE_Y = alloc(24);

// Draw peripheric pads by rotating one pad coordinates
function draw_pad(angle_deg,pad.num) (
  angle = angle_deg * $pi /180;
  i = 0;
  loop(4,
    X1 = cos(angle) * PAD_X[i] - sin(angle) * PAD_Y[i] + pad.x.offset;
    Y1 = cos(angle) * PAD_Y[i] + sin(angle) * PAD_X[i] + pad.y.offset;
    X2 = cos(angle) * PAD_X[(i+1)%4] - sin(angle) * PAD_Y[(i+1)%4] + pad.x.offset;
    Y2 = cos(angle) * PAD_Y[(i+1)%4] + sin(angle) * PAD_X[(i+1)%4] + pad.y.offset;
    gfx_line(X1, Y1, X2, Y2);
    TRAPEZE_X[i + pad.num * 4] = X1;
    TRAPEZE_Y[i + pad.num * 4] = Y1;
    TRAPEZE_X[((i+1)%4) + pad.num * 4] = X2;
    TRAPEZE_Y[((i+1)%4) + pad.num * 4] = Y2;
    i += 1;
  );
);

function draw_all_pads(selected) (
  rotation_deg = 0;
  selected == 2 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,1);
  rotation_deg += 60;
  selected == 1 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,0);  
  rotation_deg += 60;
  selected == 6 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,5);
  rotation_deg = -59.99;
  selected == 3 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,2);
  rotation_deg += -60;
  selected == 4 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,3);  
  rotation_deg += -60;
  selected == 5 ? gfx_g = 1 : gfx_g = 0;
  draw_pad(rotation_deg,4);
  selected == 7 ? gfx_g = 1 : gfx_g = 0;
  i = 0;
  loop(6,
    gfx_line(HEXAGONE_X[i] + pad.x.offset,
      HEXAGONE_Y[i] + pad.y.offset,
      HEXAGONE_X[(i+1)%6] + pad.x.offset,
      HEXAGONE_Y[(i+1)%6] + pad.y.offset);
    i += 1;
  );
);

@slider


PadMidiNote_current=60

@block
(send_sysex == 1) ? ( 
  test_sysex = midisend_buf(0,sysex_buf,sysex_size);
  send_sysex = 0;
  sysex_size = sysex_header_size;
);
while (PadMidiNote_current != PadMidiNote) (
  midisend(offset, $xB0, 1 , PadMidiNote);
  PadMidiNote_current = PadMidiNote;
);

@gfx 400 500
// detect mouse click inside rectangle
function mouse_in(xpos,ypos,w,h) (
  mouse_x>=xpos && mouse_x <= xpos+w && 
    mouse_y>=ypos && mouse_y <= ypos+h;
);

// detect mouse click (textx testy) inside polygone coordinates (nvert,array_x array_y,offeset)
function test_pad(nvert, array_x, array_y, testx, testy,offset) (
  i = offset;
  c = 0;
  j = offset + nvert - 1;
  loop(nvert,
  (((array_y[i] > testy) != (array_y[j] > testy)) 
  && (testx < (array_x[j] - array_x[i])
  * (testy - array_y[i])
  / (array_y[j] - array_y[i])
  + array_x[i]))
  ? c = !c;
  j = i;
  i += 1;
  );
  c
);

(mouse_cap&1) && !(mouse_cap&2) ? (
  posx = mouse_x - pad.x.offset;
  posy = mouse_y - pad.y.offset;
  current_pad = test_pad(6, HEXAGONE_X, HEXAGONE_Y, posx, posy, 0) ? 7 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 0) ? 1 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 4) ? 2 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 8) ? 3 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 12) ? 4 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 16) ? 5 :
  test_pad(4,TRAPEZE_X,TRAPEZE_Y, mouse_x, mouse_y, 20) ? 6 : current_pad;
);

// draw hexapad
gfx_r = 1;
gfx_g = 0;
gfx_g = 1;
draw_all_pads(current_pad);

//draw pad settings buttons

function drawButton(xpos,ypos,width,height,length,array.offset,name,displayOffset)(
  setting.id = (current_pad - 1) * 7 + array.offset;
  setting = PAD_SETTINGS[setting.id];
  gfx_r = 0.6;
  gfx_g = 0.1;
  gfx_b = 0.6;
  gfx_rect(xpos,ypos,width,height,0);
  gfx_r = 1;
  gfx_g = 0.5;
  gfx_b = 1;
  gfx_x = xpos + 2;
  gfx_y = ypos + 3;
  gfx_drawstr(name);
  gfx_r = 0.5;
  gfx_drawnumber(setting + displayOffset, 0);
  
  (mouse_cap & 1) ? ( 
    mouse_in(xpos,ypos,width,height) ? (
      mouse_click == 0 ? (
        setting += 1;
        setting = setting % length;
        sysex_buf[sysex_size] = $x01;
        sysex_buf[sysex_size + 1] = current_pad;
        sysex_buf[sysex_size + 2] = setting;
        sysex_buf[sysex_size + 3] = $xf7;
        sysex_size += 4;
        send_sysex = 1;
        mouse_click = 1;
        PAD_SETTINGS[setting.id] = setting;
      );
      mouse_value = mouse_y - mouse_cap_start;
    );
  ): mouse_click = 0;
);

//xpos,ypos,width,height,modulo,array offset,name,displayOffset
drawButton(10,10,85,15,16,0,"channel:",1);
drawButton(100,10,70,15,127,1,"note:",0);
drawButton(175,10,60,15,3,2,"trig:",0);
drawButton(240,10,95,15,3,3,"vel.curve:",0);
drawButton(10,30,110,15,3,4,"touch.curve:",0);
drawButton(125,30,100,15,2,5,"piezo.off:",0);
drawButton(230,30,100,15,2,6,"touch.off:",0);


